version: 0.2

phases:
  install:
    commands:
      - echo Installing jq...
      - yum install -y jq

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - |
        # Fetching current image version from Secrets Manager
        CURRENT_IMAGE_VERSION=$(aws secretsmanager get-secret-value --secret-id $IMAGE_TAG_SECRET_ID --query "SecretString" --output text | jq -r '.IMAGE_TAG')
        echo "Current image version: $CURRENT_IMAGE_VERSION"

        # Parse major, minor, and patch version numbers
        MAJOR_VERSION=$(echo $CURRENT_IMAGE_VERSION | cut -d. -f1)
        MINOR_VERSION=$(echo $CURRENT_IMAGE_VERSION | cut -d. -f2)
        PATCH_VERSION=$(echo $CURRENT_IMAGE_VERSION | cut -d. -f3)

        # Determine the next version
        for (( ; ; )); do
          if [ "$PATCH_VERSION" -lt 9 ]; then
            PATCH_VERSION=$((PATCH_VERSION + 1))
          else
            PATCH_VERSION=0
            if [ "$MINOR_VERSION" -eq 1 ]; then
              MAJOR_VERSION=$((MAJOR_VERSION + 1))
              MINOR_VERSION=0
            else
              MINOR_VERSION=$((MINOR_VERSION + 1))
            fi
          fi

          NEXT_IMAGE_VERSION="${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"
          
          # Ensure the new version is valid based on your logic
          if [ "$PATCH_VERSION" -lt 10 ] && [ "$MINOR_VERSION" -le 1 ]; then
            break
          fi
        done
        
        echo "Next image version: $NEXT_IMAGE_VERSION"

        # Update image version in Secrets Manager
        aws secretsmanager put-secret-value --secret-id $IMAGE_TAG_SECRET_ID --secret-string "{\"IMAGE_TAG\": \"$NEXT_IMAGE_VERSION\"}"

        # Set the current image tag
        export IMAGE_TAG=$NEXT_IMAGE_VERSION
        export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME

        # Logging into ECR
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
